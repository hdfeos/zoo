;
;  This example code illustrates how to access and visualize LAADS
;  MODIS Swath file in IDL. 
;
; If you have any questions, suggestions, comments  on this example, 
; please use the HDF-EOS Forum (http://hdfeos.org/forums).
;
;  If you would like to see an  example of any other NASA HDF/HDF-EOS 
; data product that is not listed in the HDF-EOS Comprehensive Examples page
; (http://hdfeos.org/zoo), feel free to contact us at eoshelp@hdfgroup.org
; or post it at the HDF-EOS Forum (http://hdfeos.org/forums).
; 
; Usage:
;                               
; $idl MOD07_L2.A2009346.2355.006.2015039005008.hdf.idl
;
; Tested under: IDL 8.6.0
; Last updated: 2018-02-15

; Define file name, swath name, and data field.
file_name='MOD07_L2.A2009346.2355.006.2015039005008.hdf'
swath_name='mod07'

; You can change datafield name.
datafield_name='Retrieved_Moisture_Profile'

; Open file.
file_id=EOS_SW_OPEN(file_name)

; Attach Swath.
swath_id=EOS_SW_ATTACH(file_id, swath_name)

; Retrieve data.
status=EOS_SW_READFIELD(swath_id,datafield_name,data)

; Retrieve dimension info for title of the plot.
status=EOS_SW_FIELDINFO(swath_id,datafield_name,rank,dims,numbertype,dimlist)

; Read lat/lon.
status=EOS_SW_READFIELD(swath_id,'Longitude',lon)
status=EOS_SW_READFIELD(swath_id,'Latitude',lat)

; Detach Swath.
status=EOS_SW_DETACH(swath_id)

; Close file.
status=EOS_SW_CLOSE(file_id)


; Retrieve long_name, _FillValue, units, scale factor, and offset 
; attributes. 
file_id_hdf=HDF_SD_START(file_name, /READ)
index = HDF_SD_NAMETOINDEX(file_id_hdf, datafield_name)
sds_id=HDF_SD_SELECT(file_id_hdf, index)

fillvalue_index=HDF_SD_ATTRFIND(sds_id, '_FillValue')
HDF_SD_ATTRINFO, sds_id, fillvalue_index, data=fillvalue

long_name_index=HDF_SD_ATTRFIND(sds_id, 'long_name')
HDF_SD_ATTRINFO, sds_id, long_name_index, DATA=long_name

valid_range_index=HDF_SD_ATTRFIND(sds_id, 'valid_range')
HDF_SD_ATTRINFO, sds_id, valid_range_index, data=valid_range

scalefactor_index=HDF_SD_ATTRFIND(sds_id, 'scale_factor')
HDF_SD_ATTRINFO, sds_id, scalefactor_index, DATA=scale_factor

offset_index=HDF_SD_ATTRFIND(sds_id, 'add_offset')
HDF_SD_ATTRINFO, sds_id, offset_index, data=offset

units_index=HDF_SD_ATTRFIND(sds_id, 'units')
HDF_SD_ATTRINFO, sds_id, units_index, DATA=units

HDF_SD_ENDACCESS, sds_id
HDF_SD_END, file_id_hdf

; Convert the 3D data to 2D data by subsetting at Pressure Level=5.
lev = 5
data2D=data[*,*,lev]

; Convert data type.
dataf=float(data2D)

; Process fillvalue.
idx=WHERE(data2D EQ fillvalue(0), cnt)
IF cnt GT 0 THEN dataf[idx] = !Values.F_NAN

; Process valid_range.
idx=WHERE(data2D LT valid_range(0) OR data2D GT valid_range(1), cnt)
IF cnt GT 0 THEN dataf[idx] = !Values.F_NAN

; Apply scale factor and offset according to the "MODIS ATMOSPHERIC
; PROFILE RETRIEVALLGORITHM THEORETICAL BASIS DOCUMENT" [1].
dataf = scale_factor(0) * (dataf - offset(0)) 

; Get max and min value of data for color bar.
datamin = MIN(dataf, /NAN)
datamax = MAX(dataf, /NAN)

; Prepare field name title using long name attribute and dimension name.
dimlist = STRSPLIT(dimlist, ',', /EXTRACT)
field = long_name(0) + ' at ' + dimlist(rank-1) + '=' + $
  STRING(lev, FORMAT='(I1)')

; Get min/max value of lat and lon for zoomed image.
latmin=MIN(lat)
latmax=MAX(lat)
lonmin=MIN(lon)
lonmax=MAX(lon)

; Prepare field name title using long name attribute and dimension name.
dimlist = STRSPLIT(dimlist, ',', /EXTRACT)
field = long_name(0) + ' at ' + dimlist(rank-1) + '=' + $
  STRING(lev, FORMAT='(I1)')

; Generate a plot.
c_lon = MEDIAN(lon)
c_lat = MEDIAN(lat)

; Get min/max value of lat and lon for zoomed image.
; latmin=MIN(lat)
; latmax=MAX(lat)
; lonmin=MIN(lon)
; lonmax=MAX(lon)

m = MAP('Orthographic', TITLE=file_name, FONT_SIZE=9, /BUFFER, $
        CENTER_LONGITUDE = c_lon,  CENTER_LATITUDE = c_lat)
;        LIMIT=[latmin, lonmin, latmax, lonmax])
ct = COLORTABLE(72, /reverse)
t1 = TEXT(0.01, 0.05, FONT_SIZE=8, field)
c1 = CONTOUR(dataf, lon, lat, /FILL, OVERPLOT=m, $
             RGB_TABLE=ct, $
             GRID_UNITS='degrees', POSITION=[0.1, 0.1, 0.83, 0.9])
mc = MAPCONTINENTS()
cb = COLORBAR(TARGET=c1, /BORDER, ORIENTATION=1, TEXTPOS=1,$
              POSITION=[0.85,0.2,0.87,0.8], TITLE=units)
png = file_name + '.idl.png'
c1.save, png, HEIGHT=600, WIDTH=800
EXIT



