;
;  This example code illustrates how to access and visualize LAADS
;  MYD08_D3 v6.1 HDF-EOS2 Grid file in IDL. 
;
; If you have any questions, suggestions, comments  on this example, 
; please use the HDF-EOS Forum (http://hdfeos.org/forums).
;
;  If you would like to see an  example of any other NASA HDF/HDF-EOS 
; data product that is not listed in the HDF-EOS Comprehensive Examples page
; (http://hdfeos.org/zoo), feel free to contact us at eoshelp@hdfgroup.org
; or post it at the HDF-EOS Forum (http://hdfeos.org/forums).
; 
; Usage:
;                               
; $idl MYD08_D3.A2009001.061.2018040203514.hdf.idl
;
; Tested under: IDL 8.9.0
; Last updated: 2024-05-31

; Define file name, swath name, and data field.
file_name='MYD08_D3.A2009001.061.2018040203514.hdf'
grid_name='mod08'

; You can change datafield name.
datafield_name='Cloud_Fraction_Mean'

; Open file.
file_id=EOS_GD_OPEN(file_name)

; Attach Swath.
grid_id=EOS_GD_ATTACH(file_id, grid_name)

; Retrieve data.
status=EOS_GD_READFIELD(grid_id,datafield_name,data)

; Read lat/lon.
status=EOS_GD_READFIELD(grid_id,'XDim',lon)
status=EOS_GD_READFIELD(grid_id,'YDim',lat)

; Detach Swath.
status=EOS_GD_DETACH(grid_id)

; Close file.
status=EOS_GD_CLOSE(file_id)


; Retrieve long_name, _FillValue, units, scale factor, and offset 
; attributes. 
file_id_hdf=HDF_SD_START(file_name, /READ)
index = HDF_SD_NAMETOINDEX(file_id_hdf, datafield_name)
sds_id=HDF_SD_SELECT(file_id_hdf, index)

fillvalue_index=HDF_SD_ATTRFIND(sds_id, '_FillValue')
HDF_SD_ATTRINFO, sds_id, fillvalue_index, data=fillvalue

long_name_index=HDF_SD_ATTRFIND(sds_id, 'long_name')
HDF_SD_ATTRINFO, sds_id, long_name_index, DATA=long_name

valid_range_index=HDF_SD_ATTRFIND(sds_id, 'valid_range')
HDF_SD_ATTRINFO, sds_id, valid_range_index, data=valid_range

scalefactor_index=HDF_SD_ATTRFIND(sds_id, 'scale_factor')
HDF_SD_ATTRINFO, sds_id, scalefactor_index, DATA=scale_factor

offset_index=HDF_SD_ATTRFIND(sds_id, 'add_offset')
HDF_SD_ATTRINFO, sds_id, offset_index, data=offset

units_index=HDF_SD_ATTRFIND(sds_id, 'units')
HDF_SD_ATTRINFO, sds_id, units_index, DATA=units

HDF_SD_ENDACCESS, sds_id
HDF_SD_END, file_id_hdf

; Convert data type.
dataf=float(data)

; Process fillvalue.
idx=WHERE(data EQ fillvalue(0), cnt)
IF cnt GT 0 THEN dataf[idx] = !Values.F_NAN

; Process valid_range.
idx=WHERE(data LT valid_range(0) OR data GT valid_range(1), cnt)
IF cnt GT 0 THEN dataf[idx] = !Values.F_NAN

; Apply scale factor and offset.
dataf = scale_factor(0) * (dataf - offset(0))

; Generate plot.
m = MAP('Geographic', TITLE=file_name, FONT_SIZE=9, /BUFFER)
ct = COLORTABLE(72, /reverse)
c1 = CONTOUR(dataf, lon, lat, /FILL, OVERPLOT=m, $
             RGB_TABLE=ct, $
             GRID_UNITS='degrees', POSITION=[0.1, 0.1, 0.83, 0.9])
mc = MAPCONTINENTS()
t1 = TEXT(0.01, 0.05, FONT_SIZE=8, long_name)
cb = COLORBAR(TARGET=c1, /BORDER, ORIENTATION=1, $
              TEXTPOS=1, POSITION=[0.85,0.3,0.87,0.7], TITLE=units)

; Change grid property if you want to see lat label left.
; For some reason, IDL doesn't show lon label at the bottom.
; grid = m.MAPGRID
; grid.LABEL_POSITION = 0

png = file_name + '.idl.png'
c1.save, png, HEIGHT=600, WIDTH=800
EXIT



