;  This example code illustrates how to access and visualize LAADS
;  MODATM Swath file in IDL. 
;
; If you have any questions, suggestions, comments  on this example, 
; please use the HDF-EOS Forum (http://hdfeos.org/forums).
;
;  If you would like to see an  example of any other NASA HDF/HDF-EOS 
; data product that is not listed in the HDF-EOS Comprehensive Examples page
; (http://hdfeos.org/zoo), feel free to contact us at eoshelp@hdfgroup.org
; or post it at the HDF-EOS Forum (http://hdfeos.org/forums).

; Define file name, swath name, and data field.
file_name='MODATML2.A2000055.0000.005.2006253045900.hdf'
swath_name='atml2'
datafield_name='Cloud_Fraction'

; Open file.
file_id=EOS_SW_OPEN(file_name)

; Attach Swath.
swath_id=EOS_SW_ATTACH(file_id, swath_name)

; Retrieve data.
status=EOS_SW_READFIELD(swath_id,datafield_name,data)

; Retrieve lat/lon.
status=EOS_SW_READFIELD(swath_id,'Latitude',lat)
status=EOS_SW_READFIELD(swath_id,'Longitude',lon)

; Detach Swath.
status=EOS_SW_DETACH(swath_id)

; Close file.
status=EOS_SW_CLOSE(file_id)


; Open file.
file_id_hdf=HDF_SD_START(file_name, /READ)

; Retrieve long_name, _FillValue, units, scale factor, and offset 
; attributes. 
index = HDF_SD_NAMETOINDEX(file_id_hdf, datafield_name)
sds_id=HDF_SD_SELECT(file_id_hdf, index)

fillvalue_index=HDF_SD_ATTRFIND(sds_id, '_FillValue')
HDF_SD_ATTRINFO, sds_id, fillvalue_index, data=fillvalue

long_name_index=HDF_SD_ATTRFIND(sds_id, 'long_name')
HDF_SD_ATTRINFO, sds_id, long_name_index, DATA=long_name

valid_range_index=HDF_SD_ATTRFIND(sds_id, 'valid_range')
HDF_SD_ATTRINFO, sds_id, valid_range_index, data=valid_range

scalefactor_index=HDF_SD_ATTRFIND(sds_id, 'scale_factor')
HDF_SD_ATTRINFO, sds_id, scalefactor_index, DATA=scale_factor

offset_index=HDF_SD_ATTRFIND(sds_id, 'add_offset')
HDF_SD_ATTRINFO, sds_id, offset_index, data=offset

units_index=HDF_SD_ATTRFIND(sds_id, 'units')
HDF_SD_ATTRINFO, sds_id, units_index, DATA=units

HDF_SD_ENDACCESS, sds_id

; Get fillvalue, scale_factor and offset of lat.
datafield_name_lat='Latitude'
index=HDF_SD_NAMETOINDEX(file_id_hdf, datafield_name_lat)

sds_id=HDF_SD_SELECT(file_id_hdf, index)

lat_fillvalue_index=HDF_SD_ATTRFIND(sds_id, '_FillValue')
HDF_SD_ATTRINFO, sds_id, lat_fillvalue_index, DATA=fillvalue_lat

lat_scalefactor_index=HDF_SD_ATTRFIND(sds_id, 'scale_factor')
HDF_SD_ATTRINFO, sds_id, lat_scalefactor_index, DATA=scale_factor_lat

lat_intercept_index=HDF_SD_ATTRFIND(sds_id, 'add_offset')
HDF_SD_ATTRINFO, sds_id, lat_intercept_index, DATA=offset_lat

HDF_SD_ENDACCESS, sds_id

; Get fillvalue, scale_factor and offset of lon.
datafield_name_lon='Longitude'
index=HDF_SD_NAMETOINDEX(file_id_hdf, datafield_name_lon)

sds_id=HDF_SD_SELECT(file_id_hdf, index)

lon_fillvalue_index=HDF_SD_ATTRFIND(sds_id, '_FillValue')
HDF_SD_ATTRINFO, sds_id, lon_fillvalue_index, DATA=fillvalue_lon

lon_scalefactor_index=HDF_SD_ATTRFIND(sds_id, 'scale_factor')
HDF_SD_ATTRINFO, sds_id, lon_scalefactor_index, DATA=scale_factor_lon

lon_intercept_index=HDF_SD_ATTRFIND(sds_id, 'add_offset')
HDF_SD_ATTRINFO, sds_id, lon_intercept_index, DATA=offset_lon

HDF_SD_ENDACCESS, sds_id

; Close file.
HDF_SD_END, file_id_hdf

; Convert data type.
dataf=float(data)

; Process fillvalue.
idx=WHERE(data EQ fillvalue(0), cnt)
IF cnt GT 0 THEN dataf[idx] = !Values.F_NAN

; Process valid_range.
idx=WHERE(data LT valid_range(0) OR data GT valid_range(1), cnt)
IF cnt GT 0 THEN dataf[idx] = !Values.F_NAN

; Apply scale factor and offset according to [1].
dataf = scale_factor(0) * (dataf - offset(0)) 

; Get max and min value of data for color bar.
datamin = MIN(dataf, /NAN)
datamax = MAX(dataf, /NAN)

; Apply scale and offset on lat/lon, 
; the equation is scale *(data-offset).

; Convert data type.
latf=float(lat)

; Process fillvalue.
idx=WHERE(lat EQ fillvalue_lat(0), cnt)
IF cnt GT 0 THEN latf[idx] = !Values.F_NAN
IF cnt GT 0 THEN PRINT, 'Latitude has fill values.'

; Apply scale factor and offset.
latf=(scale_factor_lat(0))*(latf-offset_lat(0))


; Convert data type.
lonf=float(lon)

; Process fillvalue.
idx=WHERE(lon EQ fillvalue_lat(0), cnt)
IF cnt GT 0 THEN lonf[idx] = !Values.F_NAN
IF cnt GT 0 THEN PRINT, 'Longitude has fill values.'

; Apply scale factor and offset.
lonf=(scale_factor_lon(0))*(lonf-offset_lon(0))

; Get min/max value of lat and lon for zoomed image.
latmin=MIN(latf, /NAN)
latmax=MAX(latf, /NAN)
lonmin=MIN(lonf, /NAN)
lonmax=MAX(lonf, /NAN)

; Prepare field name title using long name attribute.
field = long_name(0)

; Generate a plot.
levels = 254
DEVICE, DECOMPOSED=0
LOADCT, 33, NCOLORS=levels, BOTTOM=1
WINDOW, TITLE = 'FIELD:' + field + '  '+'UNIT:'+units
MAP_SET, /GRID, /CONTINENTS, XMARGIN=5, YMARGIN=5, $
  POSITION=[0.05, 0.05, 0.82, 0.82], LIMIT=[latmin, lonmin, latmax, lonmax]   
CONTOUR, dataf, lonf, latf, /OVERPLOT, /CELL_FILL, C_COLORS=INDGEN(levels)+3, $
  NLEVELS=levels
MAP_GRID, /BOX_AXES
MAP_CONTINENTS

; Draw file name, field name, and unit.
XYOUTS, 0.05, 0.86, /NORMAL, 'FIELD:' + field, $
  CHARSIZE=1.25,  ALIGNMENT=0.0
XYOUTS, 0.94, 0.86, /NORMAL, 'UNIT:' + units, $ 
  CHARSIZE=1.25,  ALIGNMENT=1.0
XYOUTS, 0.43, 0.92, /NORMAL, file_name, $
  CHARSIZE=1.75,  ALIGNMENT=0.5

; The following code is prepared for colorbar. 
;
;   If you want to have a color bar in your plot, please download 
; "Dr. Fanning's Coyote Library" from [2]. Make a directory named
; coyote somewhere on your machine, and extract the Coyote library files into
; it. 
;
;   If color bar is not not necessary for your plot, you can ignore this
; step and add comment character ';' at the beginning of the rest of codes.
;
;   Add the coyote directory that you created on your machine to your IDL
;  path like below: 
;
; !PATH=Expand_Path('[coyote directory on your machine])+':'+!PATH

;   We assume that the coyote library is installed under the current working
; directory that this code exists.
!PATH=EXPAND_PATH('+coyote/')+':'+!PATH

;  The following code assumes that you've already download and installed 
; "Dr. Fanning's Coyote Library" and add the coyote directory above. 
;
;  If you don't need a color bar in your plot, you can ignore this step
;  by adding comment character ';' at the beginning of the code.
COLORBAR, RANGE=[datamin, datamax], NCOLORS=levels, /VERTICAL, $
 POSITION=[0.9,0.05,0.94,0.8], FORMAT='(F5.2)'

; Write JPEG image file.
im = TVRD(TRUE=3)
jpg = 'MODATML2.A2000055.0000.005.2006253045900_Cloud_Fraction.idl.JPG'
WRITE_JPEG, jpg, im, QUALITY=100, TRUE=3

; Reference
;
; [1] http://modis-atmos.gsfc.nasa.gov/JOINT/format.html
; [2] http://www.dfanning.com/documents/programs.html


