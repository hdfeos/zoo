;
;  This example code illustrates how to access and visualize
;  LAADS VNP02IMG netCDF-4/HDF5 file in IDL.
;
; If you have any questions, suggestions, comments  on this example,
; please use the HDF-EOS Forum (http://hdfeos.org/forums).
;
;  If you would like to see an  example of any other NASA HDF/HDF-EOS
; data product that is not listed in the HDF-EOS Comprehensive Examples page
; (http://hdfeos.org/zoo), feel free to contact us at eoshelp@hdfgroup.org
; or post it at the HDF-EOS Forum (http://hdfeos.org/forums).
;
; Usage:
;
;  $idl VNP02IMG.A2020073.0942.002.2021126174430.nc.idl
;
; Tested under: IDL 8.9.0
; Last updated: 2024-08-09

; Open file. 
file_name='VNP02IMG.A2020073.0942.002.2021126174430.nc'
file_id=H5F_OPEN(file_name)

; Read data.
datafield_name='observation_data/I05'
data_id = H5D_OPEN(file_id, datafield_name)
data = H5D_READ(data_id)

; Get 'long_name' attribute.
title_id=H5A_OPEN_NAME(data_id, 'long_name')
long_name=H5A_READ(title_id)
H5A_CLOSE, title_id

; Get 'units' attribute.
units_id=H5A_OPEN_NAME(data_id, 'units')
units=H5A_READ(units_id)
H5A_CLOSE, units_id

; Get scale_factor attribute.
scale_factor_id = H5A_OPEN_NAME(data_id, 'scale_factor')
scale_factor = H5A_READ(scale_factor_id)
H5A_CLOSE, scale_factor_id

; Get add_offset attribute.
add_offset_id = H5A_OPEN_NAME(data_id, 'add_offset')
add_offset = H5A_READ(add_offset_id)
H5A_CLOSE, add_offset_id

; Get missing value attribute.
fillvalue_id = H5A_OPEN_NAME(data_id, '_FillValue')
fillvalue = H5A_READ(fillvalue_id)
H5A_CLOSE, fillvalue_id

; Get 'valid_min' attribute.
vmin_id = H5A_OPEN_NAME(data_id, 'valid_min')
valid_min = H5A_READ(vmin_id)
H5A_CLOSE, vmin_id

; Get 'valid_max' attribute.
vmax_id=H5A_OPEN_NAME(data_id, 'valid_max')
valid_max=H5A_READ(vmax_id)
H5A_CLOSE, vmax_id

H5D_CLOSE, data_id

; Read lat/lon from [1].
geo_file_name='VNP03IMG.A2020073.0942.002.2021125004714.nc'
file_id = H5F_OPEN(geo_file_name)

lat_name='geolocation_data/latitude'
lat_id = H5D_OPEN(file_id, lat_name)
lat = H5D_READ(lat_id)
H5D_CLOSE, lat_id
  
lon_name='geolocation_data/longitude'
lon_id = H5D_OPEN(file_id, lon_name)
lon = H5D_READ(lon_id)
H5D_CLOSE, lon_id
H5F_CLOSE, file_id

; Convert type to double.
data_raw = double(data)

; Process fill value.
idx=where(data eq fillvalue(0), cnt)
if cnt gt 0 then data_raw[idx] = !Values.F_NAN

; Process valid_range values.
idx=where(data LT valid_min(0) OR data GT valid_max(0), cnt)
if cnt gt 0 then data_raw[idx] = !Values.F_NAN

; Process scale/offset.
dataf = scale_factor(0) * data_raw + add_offset(0)

datamin = MIN(dataf, /NAN)
datamax = MAX(dataf, /NAN)

; Retrieve dimension size of data.
dimsize=SIZE(lat, /dim)
numlat=dimsize(0)
numlon=dimsize(1)

; Set center point of map.
c_lon = lon[numlat/2, numlon/2]
c_lat = lat[numlat/2, numlon/2]

; Get min/max value of lat and lon for zoomed image.
latmin=MIN(lat)
latmax=MAX(lat)
lonmin=MIN(lon)
lonmax=MAX(lon)

; Generate the plot.
m = MAP('Orthographic', TITLE=file_name, FONT_SIZE=9, /BUFFER, $
        DIMENSIONS=[800,600], $
        CENTER_LONGITUDE = c_lon,  CENTER_LATITUDE = c_lat, $
        LIMIT=[latmin, lonmin, latmax, lonmax])
ct = COLORTABLE(72, /reverse)
lon1 = lon[*]
lat1 = lat[*]
dataf1 = dataf[*]
; Subset for faster processing.
; n = 100
; n = 5
n = 2
c1 = SCATTERPLOT(lon1[0:*:n], lat1[0:*:n], OVERPLOT=m, $
                 MAGNITUDE = dataf1[0:*:n], $
                 RGB_TABLE=ct, $
                 POSITION=[0.1, 0.1, 0.83, 0.9],$
                 /SYM_FILLED, SYMBOL='o', SYM_SIZE=0.1)
mc = MAPCONTINENTS()
t1 = TEXT(0.01, 0.05, FONT_SIZE=8, STRING([long_name]))
cb = COLORBAR(RGB_TABLE=ct, RANGE=[datamin, datamax], ORIENTATION=1, BORDER=1,$
              TEXTPOS=1, POSITION=[0.85,0.2,0.87,0.8], TITLE=units)
png = file_name + '.idl.png'
c1.save, png, HEIGHT=600, WIDTH=800
EXIT
