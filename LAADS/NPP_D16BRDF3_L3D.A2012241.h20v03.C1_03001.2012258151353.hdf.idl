;
;  This example code illustrates how to access and visualize 
; LAADS NPP VIIRS D16BRDF3 Sinusoidal Grid file in IDL.
;
; If you have any questions, suggestions, comments  on this example, 
; please use the HDF-EOS Forum (http://hdfeos.org/forums).
;
;  If you would like to see an  example of any other NASA HDF/HDF-EOS 
; data product that is not listed in the HDF-EOS Comprehensive Examples page
; (http://hdfeos.org/zoo), feel free to contact us at eoshelp@hdfgroup.org
; or post it at the HDF-EOS Forum (http://hdfeos.org/forums).

; Tested under: IDL 8.0
; Last updated: 2012-10-12

; Define file name, grid name, and data field.
file_name='NPP_D16BRDF3_L3D.A2012241.h20v03.C1_03001.2012258151353.hdf'
base_name=FILE_BASENAME(file_name, '.hdf');
grid_name='NPP_Grid_BRDF'
datafield_name='Albedo_BSA_Band1'

; Open file.
file_id = EOS_GD_OPEN(file_name)

; Attach Grid.
grid_id = EOS_GD_ATTACH(file_id, grid_name)

; Retrieve data.
status = EOS_GD_READFIELD(grid_id, datafield_name, data)

; Detach Grid.
status = EOS_GD_DETACH(grid_id)

; Close file
status = EOS_GD_CLOSE(file_id)

; Retrieve long_name, units, valid_range, _FillValue, and scale_factor 
;attributes.
file_id_hdf=HDF_SD_START(file_name, /READ)
index = HDF_SD_NAMETOINDEX(file_id_hdf, datafield_name)
sds_id=HDF_SD_SELECT(file_id_hdf, index)

long_name_index=HDF_SD_ATTRFIND(sds_id, 'long_name')
HDF_SD_ATTRINFO, sds_id, long_name_index, DATA=long_name

units_index=HDF_SD_ATTRFIND(sds_id, 'units')
HDF_SD_ATTRINFO, sds_id, units_index, DATA=units

offset_index=HDF_SD_ATTRFIND(sds_id, 'add_offset')
HDF_SD_ATTRINFO, sds_id, offset_index, data=offset

valid_range_index=HDF_SD_ATTRFIND(sds_id, 'valid_range')
HDF_SD_ATTRINFO, sds_id, valid_range_index, data=valid_range

fillvalue_index=HDF_SD_ATTRFIND(sds_id, '_FillValue')
HDF_SD_ATTRINFO, sds_id, fillvalue_index, data=fillvalue

scalefactor_index=HDF_SD_ATTRFIND(sds_id, 'scale_factor')
HDF_SD_ATTRINFO, sds_id, scalefactor_index, DATA=scale_factor

HDF_SD_ENDACCESS, sds_id
HDF_SD_END, file_id_hdf

; The file contains SINUSOIDAL projection. We need to use eosdump to
; generate 1D lat and lon. For information on how to obtain the
; lat/lon data, please check [1].

; Retrieve dimension size of data
dimsize=SIZE(data,/dim)
numlat=dimsize(0)
numlon=dimsize(1)
size=numlat*numlon

; Read eosdump output file for latitude.
OPENR, 1, $
  'lat_'+base_name+'.output'
ValInlat=FLTARR(size)
READF, 1, ValInlat

lat=FINDGEN(numlat,numlon)
lat=REFORM(ValInlat,numlat,numlon)

; Read eosdump output file for longitude.
OPENR, 2, $
  'lon_'+base_name+'.output'
ValInlon=FLTARR(size)
READF, 2, ValInlon
lon=FINDGEN(numlat,numlon)
lon=REFORM(ValInlon,numlat,numlon)

; Get min/max value of lat and lon for zoomed image.
latmin=min(lat)
latmax=max(lat)
lonmin=min(lon)
lonmax=max(lon)

; Convert data type.
dataf=FLOAT(data)

; Process fillvalue.
idx=WHERE(data EQ fillvalue, cnt)
IF cnt GT 0 THEN dataf[idx] = !Values.F_NAN

; Process valid_range.
idx=WHERE(data LT valid_range(0) OR data GT valid_range(1), cnt)
IF cnt GT 0 THEN dataf[idx] = !Values.F_NAN

; Apply scale factor and offset.
dataf = dataf * scale_factor(0) + offset(0)

; Get max and min value of data for color bar.
datamin = MIN(dataf, /NAN)
datamax = MAX(dataf, /NAN)

; Generate a plot.
levels = 254
DEVICE, DECOMPOSED=0
LOADCT, 33, NCOLORS=levels, BOTTOM=1
WINDOW, TITLE = 'FIELD:' + long_name + '  ' + 'UNIT:' + units
MAP_SET, /SINUSOIDAL, /CONTINENTS, XMARGIN=5, YMARGIN=5, $
         POSITION=[0.05, 0.05, 0.82, 0.82]
CONTOUR, dataf, lon, lat, /OVERPLOT, /CELL_FILL, C_COLORS=INDGEN(levels)+3, $
  NLEVELS=levels
MAP_GRID, /BOX_AXES
MAP_CONTINENTS

; Draw file name, field name, and unit.
XYOUTS, 0.05, 0.86, /NORMAL, 'FIELD:' + long_name(0), $
  CHARSIZE=1.25,  ALIGNMENT=0.0
XYOUTS, 0.82, 0.86, /NORMAL, 'UNIT:' + units, $ 
  CHARSIZE=1.25,  ALIGNMENT=1.0
XYOUTS, 0.43, 0.92, /NORMAL, file_name, $
  CHARSIZE=1.75,  ALIGNMENT=0.5

; The following code is prepared for colorbar. 
;
;   If you want to have a color bar in your plot, please download 
; "Dr. Fanning's Coyote Library" from [2]. Make a directory named
; coyote somewhere on your machine, and extract the Coyote library files into
; it. 
;
;   If color bar is not not necessary for your plot, you can ignore this
; step and add comment character ';' at the beginning of the rest of codes.
;
;   Add the coyote directory that you created on your machine to your IDL
;  path like below: 
;
; !PATH=Expand_Path('[coyote directory on your machine])+':'+!PATH

;   We assume that the coyote library is installed under the current working
; directory that this code exists.
!PATH=Expand_Path('+coyote/')+':'+!PATH

;  The following code assumes that you've already download and installed 
; "Dr. Fanning's Coyote Library" and add the coyote directory above. 
;
;  If you don't need a color bar in your plot, you can ignore this step
;  by adding comment character ';' at the beginning of the code.
COLORBAR, RANGE=[datamin, datamax], NCOLORS=levels, /VERTICAL, $
 POSITION=[0.9,0.05,0.94,0.8], FORMAT='(F3.1)'

; Write JPEG image file.
im = TVRD(TRUE=3)
jpg = file_name + '.idl.jpg'   
WRITE_JPEG, jpg, im, QUALITY=100, TRUE=3
EXIT

; Reference
;
; [1] http://hdfeos.org/zoo/note_non_geographic.php
; [2] http://www.dfanning.com/documents/programs.html
