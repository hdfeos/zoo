;
;  This example code illustrates how to access and visualize LP DAAC MCD43A3
; Grid file in IDL. 
;
; If you have any questions, suggestions, comments  on this example, 
; please use the HDF-EOS Forum (http://hdfeos.org/forums).
;
;  If you would like to see an  example of any other NASA HDF/HDF-EOS 
; data product that is not listed in the HDF-EOS Comprehensive Examples page
; (http://hdfeos.org/zoo), feel free to contact us at eoshelp@hdfgroup.org
; or post it at the HDF-EOS Forum (http://hdfeos.org/forums).
;
; Usage:
;                               
; %idl MCD43A3.A2013305.h12v11.061.2021242063456.hdf.idl
;
; Tested under: IDL 8.9.0
; Last updated: 2024-11-07
;

; Define file name, grid name, and data field.
FILE_NAME='MCD43A3.A2013305.h12v11.061.2021242063456.hdf'
GRID_NAME='MOD_Grid_BRDF'
DATAFIELD_NAME='Albedo_BSA_Band1'

; Open file.
file_id = EOS_GD_OPEN(FILE_NAME)

; Retrieve data.
grid_id = EOS_GD_ATTACH(file_id, GRID_NAME)
status = EOS_GD_READFIELD(grid_id, DATAFIELD_NAME, data)
status = EOS_GD_GETFILLVALUE(grid_id, DATAFIELD_NAME, fill_value)
status = EOS_GD_GRIDINFO(grid_id, xdimsize, ydimsize, upleft, lowrgt)
status = EOS_GD_PROJINFO(grid_id, projcode, zonecode, spherecode, projparam)
status = EOS_GD_PIXREGINFO(grid_id, pixregcode)

; Close file.
status = EOS_GD_DETACH(grid_id)
status = EOS_GD_CLOSE(file_id)

; Retrieve long name, fillvalue, units, scale factor, and offset attributes.
newFileID=HDF_SD_START(FILE_NAME, /READ)

index=HDF_SD_NAMETOINDEX(newFileID,DATAFIELD_NAME)

thisSdsID=HDF_SD_SELECT(newFileID, index)

long_name_index=HDF_SD_ATTRFIND(thisSdsID, 'long_name')
HDF_SD_ATTRINFO, thisSdsID, long_name_index, DATA=long_name

units_index=HDF_SD_ATTRFIND(thisSdsID, 'units')
HDF_SD_ATTRINFO, thisSdsID, units_index, DATA=units

scale_index=HDF_SD_ATTRFIND(thisSdsID, 'scale_factor')
HDF_SD_ATTRINFO, thisSdsID, scale_index, data=scale

offset_index=HDF_SD_ATTRFIND(thisSdsID, 'add_offset')
HDF_SD_ATTRINFO, thisSdsID, offset_index, data=offset

Fillvalue_index=HDF_SD_ATTRFIND(thisSdsID, '_FillValue')
HDF_SD_ATTRINFO, thisSdsID, Fillvalue_index, data=fillvalue

HDF_SD_END, newFileID


; HDF-EOS2 returns 16. IDL Sinusoidal code is 116.
projcode = projcode+100

; Please note that /GCTP must be specified. 
mapStruct = MAP_PROJ_INIT(projcode, /GCTP)
x0 = upleft(0)
x1 = lowrgt(0)
y0 = upleft(1)
y1 = lowrgt(1)

xinc = (x1 - x0 ) / xdimsize
yinc = (y1 - y0 ) / ydimsize
x = FINDGEN(xdimsize)*(xinc)  + x0
y = FINDGEN(ydimsize)*(yinc)  + y0

; Create mesh.
xarr = x # Replicate(1, N_Elements(y))
yarr = Replicate(1, N_Elements(x)) # y

; See MAP_RPOJ_INVERSE IDL reference manual.
; The function returns (2,n) array of lat/lon.
result  = MAP_PROJ_INVERSE(xarr, yarr, MAP_STRUCTURE=mapStruct)
lon1d = result[0,*]
lat1d = result[1,*]

; Re-match the dataset dimension.
lat=Reform(lat1d, xdimsize, ydimsize)
lon=Reform(lon1d, xdimsize, ydimsize)

; Optionally adjust lon value to visualize map in zoomed image
; properly along 180. It is not required for this file.
; r = where((lon LE 0), count)
; lon(r) = lon(r) + 360

; Convert data type.
dataf=float(data)

; Process fill value.
dataf[WHERE(data EQ fillvalue(0))] = !Values.F_NAN

; Apply scale factor and offset.
dataf=(scale(0))*(dataf-offset(0))

; Get min/max value of lat and lon for zoomed image.
; Use +/- 20 to zoom out and see south america.
latmin=MIN(lat) ;- 20
latmax=MAX(lat) ;+ 20
lonmin=MIN(lon) ;- 20
lonmax=MAX(lon) ;+ 20

; Generate a plot.
m = MAP('Sinusoidal', $
        LIMIT=[latmin, lonmin, latmax, lonmax], $
        TITLE=file_name, /BUFFER)
ct = COLORTABLE(72, /reverse)
t1 = TEXT(0.05, 0.1, FONT_SIZE=8, long_name)
; Subset for fast plotting.
st = 10
datas = dataf[0:*:st, 0:*:st]
lons = lon[0:*:st, 0:*:st]
lats = lat[0:*:st, 0:*:st]
c1 = CONTOUR(datas, $
             lons, $
             lats, $
             /FILL, $
	     OVERPLOT=m,$
             RGB_TABLE=ct, $
             GRID_UNITS='degrees', POSITION=[0.1, 0.1, 0.83, 0.9])
mc = MAPCONTINENTS()
cb = COLORBAR(TARGET=c1, /BORDER, ORIENTATION=1, TEXTPOS=1, $
              POSITION=[0.85,0.2,0.87,0.8], TITLE=units)
png = file_name + '.idl.png'
c1.save, png, HEIGHT=600, WIDTH=800
EXIT
