;
;  This example code illustrates how to access and visualize LP DAAC
;  MCD43B4 v5 HDF-EOS2 Sinusoidal Grid file in IDL.
;
; If you have any questions, suggestions, comments  on this example, 
; please use the HDF-EOS Forum (http://hdfeos.org/forums).
;
;  If you would like to see an  example of any other NASA HDF/HDF-EOS 
; data product that is not listed in the HDF-EOS Comprehensive Examples page
; (http://hdfeos.org/zoo), feel free to contact us at eoshelp@hdfgroup.org
; or post it at the HDF-EOS Forum (http://hdfeos.org/forums).
;
; Usage:
;
;  $idl MCD43B4.A2007193.h25v05.005.2007211152315.hdf.idl
;
; Tested under: IDL 8.6.0
; Last Updated: 2018-03-26

; Open file.
file_name='MCD43B4.A2007193.h25v05.005.2007211152315.hdf'
grid_name='MOD_Grid_BRDF'
datafield_name='Nadir_Reflectance_Band1'

; Open file.
file_id = EOS_GD_OPEN(file_name)

; Attach Grid.
grid_id = EOS_GD_ATTACH(file_id, grid_name)

; Retrieve data.
status = EOS_GD_READFIELD(grid_id, datafield_name, data)

; Detach Swath.
status = EOS_GD_DETACH(grid_id)

; Close file.
status = EOS_GD_CLOSE(file_id)

; Retrieve  units, scale factor, offset, fill value, valid range attributes.
file_id=HDF_SD_START(file_name, /READ)

index=HDF_SD_NAMETOINDEX(file_id,datafield_name)

sds_id=HDF_SD_SELECT(file_id, index)

units_index=HDF_SD_ATTRFIND(sds_id, 'units')
HDF_SD_ATTRINFO, sds_id, units_index, DATA=units

scale_index=HDF_SD_ATTRFIND(sds_id, 'scale_factor')
HDF_SD_ATTRINFO, sds_id, scale_index, data=scale

offset_index=HDF_SD_ATTRFIND(sds_id, 'add_offset')
HDF_SD_ATTRINFO, sds_id, offset_index, data=offset

fillvalue_index=HDF_SD_ATTRFIND(sds_id, '_FillValue')
HDF_SD_ATTRINFO, sds_id, fillvalue_index, data=fillvalue

valid_range_index=HDF_SD_ATTRFIND(sds_id, 'valid_range')
HDF_SD_ATTRINFO, sds_id, valid_range_index, data=valid_range

HDF_SD_END, file_id

; Convert data type.
dataf=float(data)

; Process fill value.
dataf[WHERE(data EQ fillvalue(0))] = !Values.F_NAN

; Process valid range.
idx=WHERE(data LT valid_range(0) OR data GT valid_range(1), cnt)
IF cnt GT 0 THEN dataf[idx] = !Values.F_NAN

; Apply scale factor and offset.
dataf=(scale(0))*(dataf-offset(0))

; Get max and min value of data.
datamin = MIN(dataf, /NAN)
datamax = MAX(dataf, /NAN)


; The file contains SINSOID projection. 
;
; We need to use eos2dump to generate 1D lat and lon:
;
; %eos2dump -c1 MCD43B4.A2007193.h25v05.005.2007211152315.hdf > \
;   lat_MCD43B4.A2007193.h25v05.005.2007211152315.output       
;
; %eos2dump -c2 MCD43B4.A2007193.h25v05.005.2007211152315.hdf > \
;   lon_MCD43B4.A2007193.h25v05.005.2007211152315.output 
;
; For information on how to obtain the lat/lon data, see [1].

; Retrieve dimension size of data.
dimsize=SIZE(data,/dim)
numlat=DIMSIZE(0)
numlon=DIMSIZE(1)

OPENR,1,'lat_MCD43B4.A2007193.h25v05.005.2007211152315.output'
size=numlat*numlon
lat_val=FLTARR(size)
READF,1,lat_val

lat=FINDGEN(numlat,numlon)
lat=REFORM(lat_val,numlat,numlon)

OPENR,2,'lon_MCD43B4.A2007193.h25v05.005.2007211152315.output'
lon_val=FLTARR(size)
READF,2,lon_val

lon=FINDGEN(numlat,numlon)
lon=REFORM(lon_val,numlat,numlon)

; Get min/max value for lat and lon.
latmin=MIN(lat)
latmax=MAX(lat)
lonmin=MIN(lon)
lonmax=MAX(lon)

; Generate a plot.
c_lon = lon[numlat/2, numlon/2]
c_lat = lat[numlat/2, numlon/2]

; Get min/max value of lat and lon for zoomed image.
latmin=MIN(lat)
latmax=MAX(lat)
lonmin=MIN(lon)
lonmax=MAX(lon)

; Use LIMIT for zoom-in effect.
m = MAP('Sinusoidal', TITLE=file_name, FONT_SIZE=9, /BUFFER, $
        LIMIT=[latmin, lonmin, latmax, lonmax])
ct = COLORTABLE(72, /reverse)
t1 = TEXT(0.01, 0.05, FONT_SIZE=8, datafield_name)
c1 = SCATTERPLOT(lon[*], lat[*], OVERPLOT=m, $
                 MAGNITUDE = dataf[*], $
                 RGB_TABLE=ct, $
                 POSITION=[0.1, 0.1, 0.83, 0.9],$
                 /SYM_FILLED, SYMBOL='o', SYM_SIZE=0.1)
mc = MAPCONTINENTS()
cb = COLORBAR(TARGET=c1, /BORDER, ORIENTATION=1, TEXTPOS=1,$
              RANGE=[datamin, datamax], POSITION=[0.85,0.2,0.87,0.8], $
              TITLE=units)
png = file_name + '.idl.png'
c1.save, png, HEIGHT=600, WIDTH=800
EXIT
