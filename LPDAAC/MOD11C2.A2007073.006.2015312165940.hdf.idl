;
;  This example code illustrates how to access and visualize LP DAAC MOD11C2
; v6 HDF-EOS2 Grid file in IDL. 
;
; If you have any questions, suggestions, comments  on this example, 
; please use the HDF-EOS Forum (http://hdfeos.org/forums).
;
;  If you would like to see an  example of any other NASA HDF/HDF-EOS 
; data product that is not listed in the HDF-EOS Comprehensive Examples page
; (http://hdfeos.org/zoo), feel free to contact us at eoshelp@hdfgroup.org
; or post it at the HDF-EOS Forum (http://hdfeos.org/forums).
;
; Usage:
;                               
; $idl MOD11C2.A2007073.006.2015312165940.hdf.idl
;
; Tested under: IDL 8.6.0
; Last updated: 2018-04-16

; Define file name, grid name, and data field.
FILE_NAME='MOD11C2.A2007073.006.2015312165940.hdf'
GRID_NAME='MODIS_8DAY_0.05DEG_CMG_LST'
DATAFIELD_NAME='LST_Night_CMG'

; Open file.
file_id = EOS_GD_OPEN(FILE_NAME)

; Retrieve data.
grid_id = EOS_GD_ATTACH(file_id, GRID_NAME)
status = EOS_GD_READFIELD(grid_id, DATAFIELD_NAME, data)

; Close file.
status = EOS_GD_DETACH(grid_id)
status = EOS_GD_CLOSE(file_id)

; Retrieve attributes.
newFileID=HDF_SD_START(FILE_NAME, /READ)

index=HDF_SD_NAMETOINDEX(newFileID, DATAFIELD_NAME)

thisSdsID=HDF_SD_SELECT(newFileID, index)

long_name_index=HDF_SD_ATTRFIND(thisSdsID, 'long_name')
HDF_SD_ATTRINFO, thisSdsID, long_name_index, DATA=long_name

units_index=HDF_SD_ATTRFIND(thisSdsID, 'units')
HDF_SD_ATTRINFO, thisSdsID, units_index, DATA=units

scale_index=HDF_SD_ATTRFIND(thisSdsID, 'scale_factor')
HDF_SD_ATTRINFO, thisSdsID, scale_index, DATA=scale

offset_index=HDF_SD_ATTRFIND(thisSdsID, 'add_offset')
HDF_SD_ATTRINFO, thisSdsID, offset_index, DATA=offset

fillvalue_index=HDF_SD_ATTRFIND(thisSdsID, '_FillValue')
HDF_SD_ATTRINFO, thisSdsID, fillvalue_index, data=fillvalue

valid_range_index=HDF_SD_ATTRFIND(thisSdsID, 'valid_range')
HDF_SD_ATTRINFO, thisSdsID, valid_range_index, data=valid_range
HDF_SD_END, newFileID


; Calcluate lat/lon.
;
; Pixel must be centered.
offsetX = 0.5
offsetY = 0.5

; Calculate lat/lon using "UpperLeftPointMtrs" and "LowerRightMtrs" in
; StructMetadata.
upleft = [-180.000000, 90.000000]
lowright = [180.000000, -90.000000]
lowright_d = floor(lowright)
upleft_d = floor(upleft)
dd = lowright_d-upleft_d
lat_limit = dd(1)
lon_limit = dd(0)

; We need to calculate the grid space interval between two adjacent
; points.
dimsize=size(data,/dim)
xdimsize = dimsize(0)
ydimsize = dimsize(1)
scaleX = lon_limit/float(xdimsize)
scaleY = lat_limit/float(ydimsize)


lon_value= FINDGEN(xdimsize)
lat_value= FINDGEN(ydimsize)
for i=0,xdimsize-1 do lon_value(i) = (i+offsetX)*(scaleX) + upleft_d(0);
for j=0,ydimsize-1 do lat_value(j) = (j+offsetX)*(scaleY) + upleft_d(1);

lon = float(lon_value)
lat = float(lat_value)

; Get min/max value for lat and lon.
latmin=min(lat)
latmax=max(lat)
lonmin=min(lon)
lonmax=max(lon)

; Convert data type.
dataf=float(data)

; Process fill value.
dataf[WHERE(data EQ fillvalue(0))] = !Values.F_NAN

; Process valid range.
dataf[WHERE(data LT valid_range(0) OR data GT valid_range(1))] = !Values.F_NAN

; Apply offset and scale factor.
; Since add_offset is 0, we skip it in the following conversion.
dataf = (dataf - offset(0)) * scale(0)

; Get max and min value of data.
datamin = min(dataf, /NAN)
datamax = max(dataf, /NAN)

; Generate plot.
m = MAP('Geographic', TITLE=file_name, FONT_SIZE=9, /BUFFER)
ct = COLORTABLE(72, /reverse)
c1 = CONTOUR(dataf, lon, lat, /FILL, OVERPLOT=m, $
             RGB_TABLE=ct, $
             GRID_UNITS='degrees', POSITION=[0.1, 0.1, 0.83, 0.9])
mc = MAPCONTINENTS()
t1 = TEXT(0.01, 0.05, FONT_SIZE=8, long_name)
cb = COLORBAR(TARGET=c1, /BORDER, ORIENTATION=1, $
              TEXTPOS=1, POSITION=[0.85,0.3,0.87,0.7], TITLE=units)

; Change grid property if you want to see lat label left.
; For some reason, IDL doesn't show lon label at the bottom.
; grid = m.MAPGRID
; grid.LABEL_POSITION = 0

png = file_name + '.idl.png'
c1.save, png, HEIGHT=600, WIDTH=800
EXIT

