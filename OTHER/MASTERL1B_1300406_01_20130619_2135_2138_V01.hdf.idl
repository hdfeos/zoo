;
;  This example code illustrates how to access and visualize MASTER
;  HDF4 L1B file in IDL.
;
;  If you have any questions, suggestions, comments on this example, please 
; use the HDF-EOS Forum (http://hdfeos.org/forums). 
;
;  If you would like to see an  example of any other NASA HDF/HDF-EOS data 
; product that is not listed in the HDF-EOS Comprehensive Examples page 
; (http://hdfeos.org/zoo), feel free to contact us at eoshelp@hdfgroup.org or 
; post it at the HDF-EOS Forum (http://hdfeos.org/forums).

; Usage:
;
;  %idl MASTERL1B_1300406_01_20130619_2135_2138_V01.hdf.idl
;
; Tested under: IDL 8.2
; Last updated: 2013-12-04

; Open file.
file_name='MASTERL1B_1300406_01_20130619_2135_2138_V01.hdf'
file_id=HDF_SD_START(file_name, /READ)

; Read data.
datafield_name='BlackBody1Temperature'
index=HDF_SD_NAMETOINDEX(file_id, datafield_name)
sds_id=HDF_SD_SELECT(file_id, index)
HDF_SD_GETDATA, sds_id, data

; Read attributes.
fillvalue_index=HDF_SD_ATTRFIND(sds_id, '_FillValue')
HDF_SD_ATTRINFO, sds_id, fillvalue_index, data=fillvalue

units_index=HDF_SD_ATTRFIND(sds_id, 'units')
HDF_SD_ATTRINFO, sds_id, units_index, DATA=units

scalefactor_index=HDF_SD_ATTRFIND(sds_id, 'scale_factor')
HDF_SD_ATTRINFO, sds_id, scalefactor_index, DATA=scale_factor

; Read latitude.
latitude_name='AircraftLatitude'
index=HDF_SD_NAMETOINDEX(file_id, latitude_name)
sds_id=HDF_SD_SELECT(file_id, index)
HDF_SD_GETDATA, sds_id, lat


; Read longitude.
longitude_name='AircraftLongitude'
index=HDF_SD_NAMETOINDEX(file_id, longitude_name)
sds_id=HDF_SD_SELECT(file_id, index)
HDF_SD_GETDATA, sds_id, lon

; Close file
HDF_SD_END, file_id

; Convert data type.
dataf=FLOAT(data)

; Process fillvalue.
idx=WHERE(data EQ fillvalue[0], cnt)
IF cnt GT 0 THEN dataf[idx] = !Values.F_NAN

; Apply scale factor.
dataf = dataf * scale_factor[0]

; Compute data min/max for colorbar.
datamin=MIN(dataf)
PRINT, datamin
datamax=MAX(dataf)
PRINT, datamax
dim=SIZE(dataf,/dim)

; Get min/max value of lat and lon for zoomed image.
latmin=min(lat)
latmax=max(lat)
lonmin=min(lon)
lonmax=max(lon)

; Generate the plot.
SET_PLOT, 'Z'
levels = 254
DEVICE, SET_RESOLUTION=[800,600], SET_PIXEL_DEPTH=24, DECOMPOSED=0
LOADCT, 33, NCOLORS=levels, BOTTOM=1

; Plot the trajectory on a zoomed map.
MAP_SET, /GRID, /CONTINENTS, $
         POSITION=[0.05, 0.05, 0.82, 0.82], $ 
         /NOERASE,   LIMIT=[latmin, lonmin, latmax, lonmax] 

; For color.
data = BYTSCL(dataf)
MAP_GRID, /BOX_AXES
MAP_CONTINENTS, /HIRES

; PSYM=3 is dot(.) symbol.
FOR i=1,dim(0) DO $
PLOTS, lon(i-1), lat(i-1), COLOR=data(i-1), PSYM=3

; There's no longname attribute so use datafiled_name.
longname = datafield_name

; Draw file name, field name, and unit.
XYOUTS, 0.05, 0.86, /NORMAL, 'FIELD:' + longname, $ 
  CHARSIZE=1.25,  ALIGNMENT=0.0
XYOUTS, 0.94, 0.86, /Normal, 'UNIT:' + units, $ 
  CHARSIZE=1.25,  ALIGNMENT=1.0
XYOUTS, 0.43, 0.92, /NORMAL, file_name, $
  CHARSIZE=1.75,  ALIGNMENT=0.5

; The following code is prepared for colorbar. 
;
;   If you want to have a color bar in your plot, please download 
; "Dr. Fanning's Coyote Library" from [1]. Make a directory named
; coyote somewhere on your machine, and extract the Coyote library files into
; it. 
;
;   If color bar is not not necessary for your plot, you can ignore this
; step and add comment character ';' at the beginning of the rest of codes.
;
;   Add the coyote directory that you created on your machine to your IDL
;  path like below: 
;
; !PATH=Expand_Path('[coyote directory on your machine])+':'+!PATH
  !PATH=EXPAND_PATH('+coyote/')+':'+!PATH

;  The following code assumes that you've already download and installed 
; "Dr. Fanning's Coyote Library" and add the coyote directory above. 
;
;  If you don't need a color bar in your plot, you can ignore this step
;  by adding comment character ';' at the beginning of the code.
COLORBAR, RANGE=[datamin, datamax], NCOLORS=levels, /VERTICAL, $
 POSITION=[0.9,0.05,0.94,0.8], FORMAT="(F5.2)"

; Write PNG image file.
im = TVRD(TRUE=1)
png = file_name + '.idl.png'   
WRITE_PNG, png, im
EXIT

