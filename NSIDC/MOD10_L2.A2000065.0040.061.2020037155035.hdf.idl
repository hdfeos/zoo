;
;  This example code illustrates how to access and visualize NSIDC MOD10
; L2 Swath file in IDL. 
;
; If you have any questions, suggestions, comments  on this example, 
; please use the HDF-EOS Forum (http://hdfeos.org/forums).
;
;  If you would like to see an  example of any other NASA HDF/HDF-EOS 
; data product that is not listed in the HDF-EOS Comprehensive Examples page
; (http://hdfeos.org/zoo), feel free to contact us at eoshelp@hdfgroup.org
; or post it at the HDF-EOS Forum (http://hdfeos.org/forums).
;
; Usage:
;
; $idl MOD10_L2.A2000065.0040.061.2020037155035.hdf.idl
;
; Tested under: IDL 8.9.0
; Last updated: 2024-08-05
;
; Define file name, grid name, and data field.
FILE_NAME='MOD10_L2.A2000065.0040.061.2020037155035.hdf'
SWATH_NAME='MOD_Swath_Snow'
DATAFIELD_NAME='NDSI_Snow_Cover'

; Open file.
file_id = EOS_SW_OPEN(FILE_NAME)

; Retrieve data.
grid_id = EOS_SW_ATTACH(file_id, SWATH_NAME)
status = EOS_SW_READFIELD(grid_id, DATAFIELD_NAME, data)

; Close file.
status = EOS_SW_DETACH(grid_id)
status = EOS_SW_CLOSE(file_id)

; Retrieve attributes using HDF_SD_...() routines because they are not
; accessible through EOS_GD_...() APIs.
newFileID=HDF_SD_START(FILE_NAME, /READ)

index=HDF_SD_NAMETOINDEX(newFileID,DATAFIELD_NAME)

thisSdsID=HDF_SD_SELECT(newFileID, index)

long_name_index=HDF_SD_ATTRFIND(thisSdsID, 'long_name')
HDF_SD_ATTRINFO, thisSdsID, long_name_index, DATA=long_name

units_index=HDF_SD_ATTRFIND(thisSdsID, 'units')
HDF_SD_ATTRINFO, thisSdsID, units_index, DATA=unit

Fillvalue_index=HDF_SD_ATTRFIND(thisSdsID, '_FillValue')
HDF_SD_ATTRINFO, thisSdsID, Fillvalue_index, data=fillvalue
HDF_SD_END, newFileID

; Convert data type.
dataf=float(data)

; Process fillvalue. fillvalue(0) is necessary since it is read from
; attribute.
; 
; In this file, the data field has mostly two discrete values: ocean
; and fill  value.  Therefore, we will not filter out fill values
; for demonstration purporse. 
idx=where(data eq fillvalue(0),cnt); No fill value
if cnt gt 0 then dataf[idx]=!Values.F_NAN

; If you want to apply fill value above, replace the below "data" with
; "dataf" below and adjust the plot and color bar at the bottom of
; this code.
data_unique = data[UNIQ(data, SORT(data))]

; Check what discrete "Key" values are used to determine color table
; and discrete color bar.
; PRINT, data_unique
dimsize_data_unique = size(data_unique, /dim)

; The file contains swath dimension map. We need to use eosdump to generate
; 1D lat and lon. For information on how to obtain the lat/lon data,
; check [1].

; Retrieve dimension size of datadimsize=size(data,/dim) 
dimsize = size(data, /dim)
numlat = dimsize(0)
numlon = dimsize(1)
openr,1,'lat_MOD10_L2.A2000065.0040.061.2020037155035.output'
size = numlat*numlon
ValInlat = FltArr(size)
READF,1,ValInlat
lat = FINDGEN(numlat,numlon)
lat = Reform(ValInlat,numlat,numlon)

openr,2,'lon_MOD10_L2.A2000065.0040.061.2020037155035.output'
ValInlon = FltArr(size)
READF,2,ValInlon
lon = FINDGEN(numlat,numlon)
lon = Reform(ValInlon,numlat,numlon)

; Set the limits for zoomed image.
latmin = min(lat)
latmax = max(lat)
lonmin = min(lon)
lonmax = max(lon)

; Generate the plot.
m = MAP('Polar Stereographic', $
        LIMIT=[latmin, lonmin, latmax, lonmax], $
        CENTER_LATITUDE=90.0, $
        TITLE=file_name, /BUFFER)

; IDL 8.9.0 requires 3 entries in COLORTABLE.
levels = 3
; Construct color table based on the following assignment:
;
; Key R     G     B     Name
; 0   255   0   255     night (=211 < 212)
; 1   128   0   255     n/a (just for 3 levels)
; 2   225 225   255     inland water (=239 > 212)
ct = COLORTABLE([[255, 0, 255], $
                 [128, 0, 255], $
                 [0,   0, 255]], $
                NCOLORS = levels, /TRANSPOSE)
data[WHERE(data EQ 211)] = 0
data[WHERE(data EQ 239)] = 2

datamin=MIN(data)
datamax=MAX(data)
c1 = SCATTERPLOT(lon[0:*:10], lat[0:*:10], OVERPLOT=m, $
                 MAGNITUDE=data[0:*:10], $
                 RGB_TABLE=ct, $
                 POSITION=[0.1, 0.1, 0.83, 0.9],$
                 /SYM_FILLED, SYMBOL='o', SYM_SIZE=0.1)
mc = MAPCONTINENTS()
; For some reason, you can't reuse ct for RGB_TABLE in IDL 8.9.0.
cb = COLORBAR(RGB_TABLE=['m', 'b'], $
              ORIENTATION=1, BORDER=1,$
              RANGE=[0, 1], $
              TICKVALUES=[0.25, 0.75], $
              TICKNAME=['night', 'inland water'], $
              TEXTPOS=1, POSITION=[0.85,0.2,0.87,0.8])
t1 = TEXT(0.35, 0.01, long_name)

; Write PNG image file.
png = file_name+'.idl.png'
c1.save, png, HEIGHT=600, WIDTH=800
EXIT

; Reference
;
; [1] http://hdfeos.org/zoo/note_non_geographic.php

