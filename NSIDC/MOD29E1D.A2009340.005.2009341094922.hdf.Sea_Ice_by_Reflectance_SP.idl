; This example code illustrates how to access and visualize NSIDC MODIS Grid
; file in IDL. This file uses LAMAZ projection.
;
; If you have any questions, suggestions, comments on this example, please use
;  the HDF-EOS Forum (http://hdfeos.org/forums).
;
; If you would like to see an  example of any other NASA HDF/HDF-EOS data
;  product that is not listed in the HDF-EOS Comprehensive Examples page
;  (http://hdfeos.org/zoo), feel free to contact us at
;  eoshelp@hdfgroup.org or post it at the HDF-EOS Forum 
; (http://hdfeos.org/forums).

; Example HDF File source:
; ftp://ftp.hdfgroup.uiuc.edu/pub/outgoing/NASAHDF/ 
;       MOD29E1D.A2009340.005.2009341094922.hdf
;
; Original File Source:
; ftp://n4ftl01u.ecs.nasa.gov/SAN/MOST/MOD29E1D.005/2009.12.06/
;	MOD29E1D.A2009340.005.2009341094922.hdf
; File Metadata:
;	MOD29E1D.A2009340.005.2009341094922.hdf.xml
; Browse images:
;	BROWSE.MOD29E1D.A2009340.005.2009341094922.[1-4].jpg

; Define file name, grid name, and data field.
FILE_NAME='MOD29E1D.A2009340.005.2009341094922.hdf'
GRID_NAME='MOD_Grid_Seaice_4km_South'
DATAFIELD_NAME='Sea_Ice_by_Reflectance_SP'

; This data filed has no unit.
UNIT='none'

; Open file.
file_id = EOS_GD_OPEN(FILE_NAME)

; Attach grid.
grid_id = EOS_GD_ATTACH(file_id, GRID_NAME)

; Retrieve data via the EOS_GD interface
status = EOS_GD_READFIELD(grid_id, DATAFIELD_NAME, data)

; Detach grid.
status = EOS_GD_DETACH(grid_id)

; Close file.
status = EOS_GD_CLOSE(file_id)

; This file contains LAMAZ Stereographic projection. 
; We need to use eosdump to generate 1D lat and lon.
; For information on how to obtain the lat/lon data, check [1].

; Retrieve dimension size of datadimsize=size(data,/dim)
dimsize=size(data,/dim)
numlat=dimsize(0)
numlon=dimsize(1)


; Open text dump file that has lat data and read the lat data.
LAT_FILENAME=$
  'lat_MOD29E1D.A2009340.005.2009341094922.MOD_Grid_Seaice_4km_South.output'
openr,1,LAT_FILENAME
size=numlat*numlon
ValInlat=FltArr(size)
READF,1,ValInlat
close,1

; Open text dump file that has lon data and read the lon data.
LON_FILENAME=$
  'lon_MOD29E1D.A2009340.005.2009341094922.MOD_Grid_Seaice_4km_South.output'
openr,2,LON_FILENAME
size=numlat*numlon
ValInlon=FltArr(size)
READF,2,ValInlon
close,2

; Create 2-D grid of lat / lon of same dimensions as data field.
lat=FINDGEN(numlat,numlon)
lat=Reform(ValInlat,numlat,numlon)

lon=FINDGEN(numlat,numlon)
lon=Reform(ValInlon,numlat,numlon)

; Check what discrete "Key" values are used to determine color table
; and discrete color bar.
data_unique = data[UNIQ(data, SORT(data))]
PRINT, data_unique
dimsize_data_unique = size(data_unique,/dim)
levels = dimsize_data_unique(0)

;  The following key information for color table is obtained from the 
; data field's "Key" attribute. You can check it using HDFView.
; 
; Key = 0=missing data, 1=no decision, 11=night, 25=land, 37=inland water,
;       39=ocean, 50=cloud, 200=sea ice, 253=no input tile expected,
;       254=non-production mask; _FillValue = 255

; Construct a color table based on the following assignment:
;
; Key  R  G   B    Name
; 0   255 255 255  white
; 1   184 184 184
; 11  225 225 150
; 25  0   255 0
; 37  35  35  117
; 39  35  35  117
; 50  100 200 255
; 100 255 176 255
; 153 0   0   0
; 193 0   0   0
; 200 255 0   0
; 233 0   0   0
; 254 0   0   0
; 255 0   0   0  black
;
; The above assignment is close to "Image Gallery" of NSIDC [2].
;
; The first black (0,0,0) entry is for background(bg).
; We picked grey to make fill values visible.
; You can use (127,127,127) for the first entry to make fill value
; stand out.
;
; The key values are obtained using the "PRINT, data_unique" statement above.
;Key:    bg,   11, 25, 37,  39, 50, 200, 253, 255
red =   [0, 225, 0,  35,  35, 100,255, 0,   0]
green = [0, 225, 255,35,  35, 200,0,   0,   0]
blue =  [0, 150, 0,  117, 117,255,0,   0,   0]

; Generate the plot.
DEVICE, DECOMPOSED=0

; Load the custom color table.
TVLCT, red, green, blue

WINDOW, Title='FIELD:' +  DATAFIELD_NAME +'  '+'UNIT:'+ unit

; Limit the plot to the Southern Hemisphere.
;
; This LAMAZ projection data spans over -90 to 90 and -180 and 180.
; To get a zoomed effect, limit the lat max to -30.
latmin=-90
latmax=-30
lonmin=-180
lonmax=180

; The /ISOTROPIC option makes the plot square.
MAP_SET, /LAMBERT, -90, 0, 0, /ISOTROPIC, /CONTINENTS, XMARGIN=5, YMARGIN=5, $
 POSITION=[0.05, 0.05, 0.82, 0.82], LIMIT=[latmin, lonmin, latmax, lonmax]  
CONTOUR, data, lon, lat, /OVERPLOT, /CELL_FILL, LEVELS=data_unique, $ 
  C_Colors=Indgen(levels)+1

; Don't use /BOX_GRID option for polar view.
MAP_GRID, /LABEL
MAP_CONTINENTS
XYOuts, 0.35, 0.84, /Normal, DATAFIELD_NAME, $
  Charsize=1.25, Alignment=0.0
XYOuts, 0.8, 0.84, /Normal, 'UNIT:' + unit, $ 
  Charsize=1.25, Alignment=0.0
XYOuts, 0.5, 0.92, /Normal, FILE_NAME, $
  Charsize=1.75,  Alignment=0.5

;  The following code is prepared for colorbar. 
;
;   If you require colorbar in your plot, you could download 
; "Dr. Fanning's Coyote Library" from [3]. Make a directory named
; coyote somewhere on your machine, and extract the Coyote files into
; it. 
;
;   If color bar is not not necessary for your plot, you can ignore this
; step and add comment character ';' ahead of coding. 
;
;    Add the coyote directory you create on your machine to your IDL
;  path like below: 
;
; !PATH=Expand_Path('[coyote directory on your machine])+':'+!PATH

; Let's assume that you've installed coyote library under the current working
; directory that this code exists.
!PATH=Expand_Path('+coyote/')+':'+!PATH

; The following key information in "C_labels" is obtained from the 
; data field's "Key" attribute. 
;
; You can check it using HDFView.
; 
; Key = 0=missing data, 1=no decision, 11=night, 25=land, 37=inland water,
;       39=ocean, 50=cloud, 200=sea ice, 253=no input tile expected,
;       254=non-production mask; _FillValue = 255
; 
; We have 11, 25, 37, 39, 50, 200, 253, 255 only.
; We shorten "inland water" to "water for better looking legend.
C_labels=["night", "land", "inland water","ocean", "cloud", "sea ice",$
          "no input", "fill"]

; Plot the discrete color bar.
DCBAR, NCOLORS=levels, BOTTOM=1,  /Vertical, LABELS=C_labels, $
  Position=[0.8,0.1,0.82,0.8]

; Reference
;
; [1] http://hdfeos.org/zoo/note_non_geographic.php
; [2] ftp://n4ftl01u.ecs.nasa.gov/SAN/MOST/MOD29E1D.005/2009.12.06/BROWSE.MOD29E1D.A2009340.005.2009341094922.2.jpg
; [3] http://www.dfanning.com/documents/programs.html


