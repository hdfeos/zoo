;
;  This example code illustrates how to access and visualize LaRC MISR
; AM1 TC ALBEDO HDF-EOS2 SOM Grid file in IDL. 
;
; If you have any questions, suggestions, comments  on this example, 
; please use the HDF-EOS Forum (http://hdfeos.org/forums).
;
;  If you would like to see an  example of any other NASA HDF/HDF-EOS 
; data product that is not listed in the HDF-EOS Comprehensive Examples page
; (http://hdfeos.org/zoo), feel free to contact us at eoshelp@hdfgroup.org
; or post it at the HDF-EOS Forum (http://hdfeos.org/forums).
;
; Usage:
;
;  $idl MISR_AM1_TC_ALBEDO_P223_O056884_F05_0011.hdf.idl
;
; Tested under: IDL 8.6.0
; Last updated: 2018-08-16

; Define file name, grid name, and data field
FILE_NAME='MISR_AM1_TC_ALBEDO_P223_O056884_F05_0011.hdf'
GRID_NAME='ReflectingLevelParameters_2.2_km'
DATAFIELD_NAME='AlbedoLocal'

; Open file.
file_id = EOS_GD_OPEN(FILE_NAME)

; Retrieve data.
grid_id = EOS_GD_ATTACH(file_id, GRID_NAME)
status = EOS_GD_READFIELD(grid_id, DATAFIELD_NAME, data)
status = EOS_GD_GETFILLVALUE(grid_id, DATAFIELD_NAME, fillvalue)
; Close file.
status = EOS_GD_DETACH(grid_id)
status = EOS_GD_CLOSE(file_id)

; Convert the 4D data to 2D data at SOMBlockDim=50, NBandDim=0.
data=data(0,*,*,50)
data=reform(data)

; Convert data type.
data=float(data)

; Get max and min value of data.
idx=where(data ne fillvalue, cnt)
if cnt gt 0 then datamin=min(data[idx])
if cnt gt 0 then datamax=max(data[idx])

; Convert data that are equal to fillvalue to NaN
idx=where(data eq fillvalue, cnt)
if cnt gt 0 then data[idx]=!Values.F_NAN

; The geolocation values are stored in external files.
; Retrieve dimension size of datadimsize=size(data,/dim).
dimsize=size(data,/dim)
numlat=dimsize(0)
numlon=dimsize(1)

openr,1,'lat_MISR_AM1_TC_ALBEDO_P223_O056884_F05_0011.output'
size=numlat*numlon
ValInlat=FltArr(size)
READF,1,ValInlat

lat=FINDGEN(numlat,numlon)
lat=Reform(ValInlat,numlat,numlon)

openr,2,'lon_MISR_AM1_TC_ALBEDO_P223_O056884_F05_0011.output'
size=numlat*numlon
ValInlon=FltArr(size)
READF,2,ValInlon

lon=FINDGEN(numlat,numlon)
lon=Reform(ValInlon,numlat,numlon)

latmin=min(lat)
latmax=max(lat)
lonmin=min(lon)
lonmax=max(lon)

; Generate the plot.
m = MAP('Geographic', TITLE=file_name, FONT_SIZE=9, /BUFFER, $
        LIMIT=[latmin, lonmin, latmax, lonmax])
ct = COLORTABLE(72, /reverse)
c1 = CONTOUR(data, lon, lat, /FILL, OVERPLOT=m, $
             RGB_TABLE=ct, $
             GRID_UNITS='degrees', POSITION=[0.1, 0.1, 0.83, 0.9])
mc = MAPCONTINENTS()
long_name = DATAFIELD_NAME+' at SOMBlockDim=50 NBandDim=0'
t1 = TEXT(0.01, 0.05, FONT_SIZE=8, long_name)
units = 'No Unit'
cb = COLORBAR(TARGET=c1, /BORDER, ORIENTATION=1, $
              TEXTPOS=1, POSITION=[0.85,0.3,0.87,0.7], TITLE=units)
png = file_name + '.idl.png'
c1.save, png, WIDTH=800, HEIGHT=600
EXIT
