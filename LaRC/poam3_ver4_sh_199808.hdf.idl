;
;  This example code illustrates how to access and visualize LaRC POAM3
; Level 2 HDF4 file in IDL. 
;
;  If you have any questions, suggestions, comments on this example, please use
; the HDF-EOS Forum (http://hdfeos.org/forums). 
;
;  If you would like to see an  example of any other NASA HDF/HDF-EOS data 
; product that is not listed in the HDF-EOS Comprehensive Examples page 
; (http://hdfeos.org/zoo), feel free to contact us at eoshelp@hdfgroup.org or 
; post it at the HDF-EOS Forum (http://hdfeos.org/forums).
;
; Usage:
;
;  %idl poam3_ver4_sh_199808.hdf.idl
;
; Tested under: IDL 8.7.2
; Last updated: 2022-04-21


; Open file.
file_name = 'poam3_ver4_sh_199808.hdf'
fid = HDF_SD_START(file_name, /READ)
data_name = 'ozone'
index = HDF_SD_NAMETOINDEX(fid, data_name)

sds_id = HDF_SD_SELECT(fid, index)
HDF_SD_GETDATA, sds_id, ozone

long_name_index = HDF_SD_ATTRFIND(sds_id, 'long_name')
HDF_SD_ATTRINFO, sds_id, long_name_index, DATA=long_name

units_index = HDF_SD_ATTRFIND(sds_id, 'units')
HDF_SD_ATTRINFO, sds_id, units_index, DATA=units

; End access to SDS.
HDF_SD_ENDACCESS, sds_id

; Retrieve lat data.
data_name = 'lat'
index = HDF_SD_NAMETOINDEX(fid, data_name)
sds_id = HDF_SD_SELECT(fid, index)
HDF_SD_GETDATA, sds_id, lat

; End access to SDS.
HDF_SD_ENDACCESS, sds_id

; Retrieve lon data.
data_name = 'lon'
index = HDF_SD_NAMETOINDEX(fid, data_name)
sds_id = HDF_SD_SELECT(fid, index)
HDF_SD_GETDATA, sds_id, lon

; End access to SDS.
HDF_SD_ENDACCESS, sds_id

; Retrieve alt data.
data_name = 'z_ozone'
index = HDF_SD_NAMETOINDEX(fid, data_name)
sds_id = HDF_SD_SELECT(fid, index)
HDF_SD_GETDATA, sds_id, alt

units_index = HDF_SD_ATTRFIND(sds_id, 'units')
HDF_SD_ATTRINFO, sds_id, units_index, DATA=a_units

; End access to SDS.
HDF_SD_ENDACCESS, sds_id

; Close file.
HDF_SD_END, fid

; Subset data.
alt_index = 55
data = ozone(*, alt_index)

; Make 1D.
data = reform(data)

longname = long_name + ' at Altitude=' + STRTRIM(STRING(alt[alt_index]), 1)
longname = longname + '(' + a_units + ')'

; Lon starts from 0. Shift. 
lon = ((lon + 180) MOD 360) - 180

; Generate the plot.
m = MAP('Geographic', TITLE=file_name, FONT_SIZE=9, /BUFFER)
ct = COLORTABLE(72, /reverse)
t1 = TEXT(0.35, 0.2, longname)

datamin = MIN(data)
datamax = MAX(data)

; We use SCATTERPLOT because data is 2-d lat/lon swath.
c1 = SCATTERPLOT(lon, lat, OVERPLOT=m, $
                 MAGNITUDE = data, $
                 RGB_TABLE=ct, $
                 POSITION=[0.1, 0.1, 0.83, 0.9],$
                 /SYM_FILLED, SYMBOL='o', SYM_SIZE=0.1)
mc = MAPCONTINENTS()
cb = COLORBAR(RGB_TABLE=ct, RANGE=[datamin, datamax], /BORDER, ORIENTATION=1, $
              TEXTPOS=1, POSITION=[0.85,0.2,0.87,0.8],  TITLE=units)

png = file_name + '.idl.png'
c1.save, png, HEIGHT=600, WIDTH=800
EXIT
