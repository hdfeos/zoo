;
; This example code illustrates how to access and visualize LaRC ASDC 
; MISR L2B2 SOM HDF-EOS2 Grid file in IDL. 
;
;  If you have any questions, suggestions, comments on this example, please 
; use the HDF-EOS Forum (http://hdfeos.org/forums). 
;
;  If you would like to see an  example of any other NASA HDF/HDF-EOS data 
; product that is not listed in the HDF-EOS Comprehensive Examples page 
; (http://hdfeos.org/zoo), feel free to contact us at eoshelp@hdfgroup.org or 
; post it at the HDF-EOS Forum (http://hdfeos.org/forums).

; Tested under: IDL 8.2.3
; Last updated: 2021-9-2

; Open file.
FILE_NAME='MISR_AM1_GRP_TERRAIN_GM_P052_O000997_AA_F03_0024.hdf'
file_id = EOS_GD_OPEN(FILE_NAME)

; Read data.
GRID_NAME='BlueBand'
DATAFIELD_NAME='Blue Radiance/RDQI'
grid_id = EOS_GD_ATTACH(file_id, GRID_NAME)
status = EOS_GD_READFIELD(grid_id, DATAFIELD_NAME, data3D)

; See if "Scale factor" attribute is accessible through EOS_GD APIs.
; The existence of the "Scale facotr" can be verified using HDFView.
; It is stored under "/BlueBand/Grid Attributes/Scale factor" Vdata.
;
; Uncomment the following two lines to see the list of attributes.
; status = EOS_GD_INQATTRS(grid_id, attrlist)
; PRINT, attrlist

; Read the "Scale factor" attribute.
status = EOS_GD_READATTR(grid_id, 'Scale factor', val)

; Uncomment the following line to confirm the value of scale factor.
;PRINT, val(0)

; Save it.
scale_factor = val(0)
status = EOS_GD_GETFILLVALUE(grid_id, DATAFIELD_NAME, fill_value)

; Close file.
status = EOS_GD_DETACH(grid_id)
status = EOS_GD_CLOSE(file_id)


; We need to shift bits for RDQI to get blue band only. 
; See the page 105 of "MISR Data Products Specifications (rev. M)".
; The document is available at [1].
data3Ds = ISHFT(data3D, -2)

; To use !Values.F_NAN, change ushort16 integer type to float.
data3Df = FLOAT(data3Ds)

; Convert data that are equal to _FillValue to NaN.
idx = WHERE(data3D EQ fill_value, cnt)
IF cnt GT 0 THEN data3Df[idx]=!Values.F_NAN

; Filter out values (> 16376) used for "Flag Data".
; See Table 6-23: Terrain-projected TOA Radiance Parameter Fill Values
; in  "Data Products Specifications (rev. M)" [1].
idx = WHERE(data3Ds GT 16376, cnt)
IF cnt GT 0 then data3Df[idx] = !Values.F_NAN

; Convert the 3-D data to 2D data at SOMBlockDim=50.
; The dataset is big so plotting all 180 blocks will run out of memory easily.
data=data3Df(*,*,49)
data=reform(data)

; Apply scale factor.
data = data * scale_factor

; Get max and min value of data for color bar.
datamin = MIN(data, /NAN)
datamax = MAX(data, /NAN)


; Retrieve dimension size of data.
dimsize=size(data,/dim)
numlat=dimsize(0)
numlon=dimsize(1)

; The file contains SOM projection. We need to use eosdump to generate
; lat and lon data. That is, 
; 
; $eos2dump -c1 MISR_AM1_GRP_TERRAIN_GM_P052_O000997_AA_F03_0024.hdf BlueBand 50 > lat_MISR_AM1_GRP_TERRAIN_GM_P052_O000997_AA_F03_0024.output
;
; $eos2dump -c2 MISR_AM1_GRP_TERRAIN_GM_P052_O000997_AA_F03_0024.hdf BlueBand 50 > lon_MISR_AM1_GRP_TERRAIN_GM_P052_O000997_AA_F03_0024.output
;
;
; For information on how to obtain the lat/lon data, check out [2]. 
openr,1,'lat_MISR_AM1_GRP_TERRAIN_GM_P052_O000997_AA_F03_0024.output'
size=numlat*numlon
ValInlat=FltArr(size)
READF,1,ValInlat

lat=FINDGEN(numlat,numlon)
lat=Reform(ValInlat,numlat,numlon)

openr,2,'lon_MISR_AM1_GRP_TERRAIN_GM_P052_O000997_AA_F03_0024.output'
ValInlon=FltArr(size)
READF,2,ValInlon

lon=FINDGEN(numlat,numlon)
lon=Reform(ValInlon,numlat,numlon)


; Get min/max value for lat and lon.
latmin=min(lat)
latmax=max(lat)
lonmin=min(lon)
lonmax=max(lon)

; Generate the plot.
SET_PLOT, 'Z'
levels=254
DEVICE, SET_RESOLUTION=[800,600], SET_PIXEL_DEPTH=24, DECOMPOSED=0
LOADCT,33, NCOLORS=levels, BOTTOM=1
MAP_SET, /GRID, /CONTINENTS, /HIRES, XMARGIN=5, YMARGIN=5, $
         POSITION=[0.05, 0.07, 0.85, 0.84], /NOERASE, $
         LIMIT=[latmin, lonmin, latmax, lonmax]    
CONTOUR, data, lon, lat, /OVERPLOT, /CELL_FILL, C_COLORS=INDGEN(levels)+3, NLEVELS=levels
MAP_GRID, /BOX_AXES
MAP_CONTINENTS

; Annotate plot.
long_name = "Blue Radiance at SOMBlockDim=50"
units = 'Wm!E-2!Nsr!E-1!N!4'+ String("154B) + '!Xm!E-1'

; Draw file name, dataset name, and units.
XYOUTS, 0.05, 0.88, /NORMAL, 'FIELD:' + long_name, $
        CHARSIZE=1.25,  ALIGNMENT=0.0
XYOUTS, 0.82, 0.88, /NORMAL, 'UNIT:' + units, $ 
        CHARSIZE=1.25,  ALIGNMENT=1.0
XYOUTS, 0.43, 0.95, /NORMAL, file_name, $
        CHARSIZE=1.25,  ALIGNMENT=0.5

; The following code is prepared for colorbar. 
;
;   If you want to have a color bar in your plot, please download 
; "Dr. Fanning's Coyote Library" from [3]. Make a directory named
; coyote somewhere on your machine, and extract the Coyote library files into
; it. 
;
;   If color bar is not not necessary for your plot, you can ignore this
; step and add comment character ';' at the beginning of the rest of codes.
;
;   Add the coyote directory that you created on your machine to your IDL
;  path like below: 
;
; !PATH=Expand_Path('[coyote directory on your machine])+':'+!PATH

;   We assume that the coyote library is installed under the current working
; directory that this code exists.
!PATH=Expand_Path('+coyote/')+':'+!PATH

;  The following code assumes that you've already download and installed 
; "Dr. Fanning's Coyote Library" and add the coyote directory above. 
;
;  If you don't need a color bar in your plot, you can ignore this step
;  by adding comment character ';' at the beginning of the code.
COLORBAR, Range=[datamin, datamax], Ncolors=levels, /Vertical, Position=[0.93,0.1,0.97,0.9]

; Write PNG image file.
im = TVRD(TRUE=1)
WRITE_PNG, file_name+'.idl.png', im
EXIT


; References
;
; [1] https://asdc.larc.nasa.gov/documents/misr/DPS_v33_RevM.pdf
; [2] http://hdfeos.org/zoo/note_non_geographic.php
; [3] http://www.dfanning.com/documents/programs.html
