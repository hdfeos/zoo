;
;  This example code illustrates how to access and visualize LaRC CALIPSO Lidar
; Level 3 Aerosol Profile version 4.20 HDF4 file in IDL. 
;
;  If you have any questions, suggestions, comments on this example, please use
; the HDF-EOS Forum (http://hdfeos.org/forums). 
;
;  If you would like to see an  example of any other NASA HDF/HDF-EOS data 
; product that is not listed in the HDF-EOS Comprehensive Examples page 
; (http://hdfeos.org/zoo), feel free to contact us at eoshelp@hdfgroup.org or 
; post it at the HDF-EOS Forum (http://hdfeos.org/forums).
;
; Usage:
;
;  %idl CAL_LID_L3_Tropospheric_APro_CloudFree-Standard-V4-20.2008-04D.hdf.idl
;
; Tested under: IDL 8.7.2
; Last updated: 2021-08-26


; Open file.
file_name='CAL_LID_L3_Tropospheric_APro_CloudFree-Standard-V4-20.2008-04D.hdf'

fid = HDF_SD_START(file_name, /READ)

; Define data name. Use "HDFView" or "hdp" tool to check datasets
; available inside the file.
data_name="Extinction_Coefficient_532_Mean"
long_name = data_name
index=HDF_SD_NAMETOINDEX(fid, data_name)

; Retrieve the data.
sds_id=HDF_SD_SELECT(fid, index)
HDF_SD_GETDATA, sds_id, dset
units_index=HDF_SD_ATTRFIND(sds_id, 'units')
HDF_SD_ATTRINFO, sds_id, units_index, DATA=units
  
; Retrieve lat data.
data_name="Latitude_Midpoint"
index=HDF_SD_NAMETOINDEX(fid, data_name)
sds_id=HDF_SD_SELECT(fid, index)
HDF_SD_GETDATA, sds_id, lat

; Retrieve lon data.
data_name="Longitude_Midpoint"
index=HDF_SD_NAMETOINDEX(fid, data_name)
sds_id=HDF_SD_SELECT(fid, index)
HDF_SD_GETDATA, sds_id, lon

; Retrieve alt data.
data_name="Altitude_Midpoint"
index=HDF_SD_NAMETOINDEX(fid, data_name)
sds_id=HDF_SD_SELECT(fid, index)
HDF_SD_GETDATA, sds_id, alt
units_alt_index=HDF_SD_ATTRFIND(sds_id, 'units')
HDF_SD_ATTRINFO, sds_id, units_alt_index, DATA=units_alt

; End access to SDS.
HDF_SD_ENDACCESS, sds_id

; Close file.
HDF_SD_END, fid

; Subset data at altitude index = 125. Pick any number from 0 to 207.
alt_index = 125
data = dset(alt_index, *, *)

; Make 3D to 2D.
data = reform(data)

; Process fill value.
fillvalue = -9999.0
idx=where(data eq fillvalue, cnt)
if cnt gt 0 then data[idx] = !Values.F_NAN

; Generate the plot.
m = MAP('Geographic', TITLE=file_name, FONT_SIZE=9, /BUFFER)
ct = COLORTABLE(72, /reverse)
t1 = TEXT(0.1, 0.2, long_name+' at altitude='+STRING(alt[alt_index])+units_alt)
c1 = CONTOUR(data, lon, lat, /FILL, OVERPLOT=m, $
             RGB_TABLE=ct, $
             GRID_UNITS='degrees', POSITION=[0.1, 0.1, 0.83, 0.9])
mc = MAPCONTINENTS()
cb = COLORBAR(TARGET=c1, /BORDER, ORIENTATION=1, TEXTPOS=1, $
              POSITION=[0.85,0.2,0.87,0.8], TITLE=units)
png = file_name + '.idl.png'
c1.save, png, HEIGHT=600, WIDTH=800
EXIT
