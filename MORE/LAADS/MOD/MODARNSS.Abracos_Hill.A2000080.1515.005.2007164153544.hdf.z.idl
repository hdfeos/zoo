;
;  This example code illustrates how to access and visualize LAADS MODIS
;  swath file in IDL. 
;
;  If you have any questions, suggestions, comments on this example, please 
; use the HDF-EOS Forum (http://hdfeos.org/forums). 
;
;  If you would like to see an  example of any other NASA HDF/HDF-EOS data 
; product that is not listed in the HDF-EOS Comprehensive Examples page 
; (http://hdfeos.org/zoo), feel free to contact us at eoshelp@hdfgroup.org 
; or post it at the HDF-EOS Forum (http://hdfeos.org/forums).
;
; Usage:
;                               
; %idl MODARNSS.Abracos_Hill.A2000080.1515.005.2007164153544.hdf.z.idl
;
; Tested under: IDL 8.6.0
; Last updated: 2017-11-21

; Open file.
FILE_NAME='MODARNSS.Abracos_Hill.A2000080.1515.005.2007164153544.hdf'
newFileID=HDF_SD_START(FILE_NAME, /READ)

; Read dataset.
DATAFIELD_NAME="EV_Band26"
index=HDF_SD_NAMETOINDEX(newFileID,DATAFIELD_NAME)

thisSdsID=HDF_SD_SELECT(newFileID, index)
HDF_SD_GETDATA, thisSdsID, data

; Read attributes.
long_name_index=HDF_SD_ATTRFIND(thisSdsID, 'long_name')
HDF_SD_ATTRINFO, thisSdsID, long_name_index, DATA=long_name

fillvalue_index=HDF_SD_ATTRFIND(thisSdsID, '_FillValue')
HDF_SD_ATTRINFO, thisSdsID, fillvalue_index, DATA=fillvalue

units_index=HDF_SD_ATTRFIND(thisSdsID, 'corrected_counts_units')
HDF_SD_ATTRINFO, thisSdsID, units_index, DATA=units

slope_index=HDF_SD_ATTRFIND(thisSdsID, 'corrected_counts_scales')
HDF_SD_ATTRINFO, thisSdsID, slope_index, DATA=scale_factor

intercept_index=HDF_SD_ATTRFIND(thisSdsID, 'corrected_counts_offsets')
HDF_SD_ATTRINFO, thisSdsID, intercept_index, DATA=offset

range_index=HDF_SD_ATTRFIND(thisSdsID, 'valid_range')
HDF_SD_ATTRINFO, thisSdsID, range_index, DATA=valid_range

; Read latitude.
lat_name="Latitude"
index=HDF_SD_NAMETOINDEX(newFileID, lat_name)

thisSdsID=HDF_SD_SELECT(newFileID, index)
HDF_SD_GETDATA, thisSdsID, lat

; Read longitude.
lon_name ="Longitude"
index=HDF_SD_NAMETOINDEX(newFileID, lon_name)

thisSdsID=HDF_SD_SELECT(newFileID, index)
HDF_SD_GETDATA, thisSdsID, lon

; Close file.
HDF_SD_END, newFileID

; Handle fill value and scale/offset.
dataf=float(data)

idx=where(data EQ fillvalue(0), cnt)
IF cnt GT 0 tHEN dataf[idx] = !Values.F_NAN

; Process valid_range.
idx=WHERE(data LT valid_range[0] OR data GT valid_range[1], cnt)
IF cnt GT 0 THEN dataf[idx] = !Values.F_NAN

; Apply scale and offset.
dataf=(scale_factor(0))*(dataf-offset(0))

; Draw plot.
m = MAP('Geographic', TITLE=file_name+'$\n$'+ DATAFIELD_NAME, FONT_SIZE=9,$
        /BUFFER, LIMIT = [MIN(lat), MIN(lon), MAX(lat), MAX(lon)])

ct = COLORTABLE(72)
t1 = TEXT(0.25, 0.05, FONT_SIZE=9, long_name)
c1 = CONTOUR(dataf, lon, lat, /FILL, OVERPLOT=m, $
             RGB_TABLE=ct, $
             GRID_UNITS='degrees', POSITION=[0.1, 0.1, 0.83, 0.9])
mc = MAPCONTINENTS()
cb = COLORBAR(TARGET=c1, /BORDER, ORIENTATION=1, TEXTPOS=1, $
              POSITION=[0.85,0.2,0.87,0.8], TITLE=units)
png = file_name + '.z.idl.png'
c1.SAVE, png, HEIGHT=600, WIDTH=800
EXIT
