;
;  This example code illustrates how to access and visualize LP DAAC MCD43C1
; Grid file in IDL. 
;
; If you have any questions, suggestions, comments  on this example, 
; please use the HDF-EOS Forum (http://hdfeos.org/forums).
;
;  If you would like to see an  example of any other NASA HDF/HDF-EOS 
; data product that is not listed in the HDF-EOS Comprehensive Examples page
; (http://hdfeos.org/zoo), feel free to contact us at eoshelp@hdfgroup.org
; or post it at the HDF-EOS Forum (http://hdfeos.org/forums).
;
; Usage:
;                               
; %idl MCD43C1.A2006353.004.2007012185705.hdf.idl
;
; Tested under: IDL 8.7.2
; Last updated: 2021-10-18
;

; Define file name, grid name, and data field.
FILE_NAME='MCD43C1.A2006353.006.2016223232730.hdf'
GRID_NAME='MCD_CMG_BRDF_0.05Deg'
DATAFIELD_NAME='BRDF_Albedo_Parameter3_Band4'

; Open file.
file_id = EOS_GD_OPEN(FILE_NAME)

; Retrieve data.
grid_id = EOS_GD_ATTACH(file_id, GRID_NAME)
status = EOS_GD_READFIELD(grid_id, DATAFIELD_NAME, data)
status = EOS_GD_GETFILLVALUE(grid_id, DATAFIELD_NAME, fill_value)
status = EOS_GD_GRIDINFO(grid_id, xdimsize, ydimsize, upleft, lowright)
status = EOS_GD_PIXREGINFO(grid_id, pixregcode)

; Close file.
status = EOS_GD_DETACH(grid_id)
status = EOS_GD_CLOSE(file_id)

; Retrieve long name, fillvalue, units, scale factor, and offset attributes.
newFileID=HDF_SD_START(FILE_NAME, /READ)

index=HDF_SD_NAMETOINDEX(newFileID,DATAFIELD_NAME)

thisSdsID=HDF_SD_SELECT(newFileID, index)

long_name_index=HDF_SD_ATTRFIND(thisSdsID, 'long_name')
HDF_SD_ATTRINFO, thisSdsID, long_name_index, DATA=long_name

units_index=HDF_SD_ATTRFIND(thisSdsID, 'units')
HDF_SD_ATTRINFO, thisSdsID, units_index, DATA=units

scale_index=HDF_SD_ATTRFIND(thisSdsID, 'scale_factor')
HDF_SD_ATTRINFO, thisSdsID, scale_index, data=scale

offset_index=HDF_SD_ATTRFIND(thisSdsID, 'add_offset')
HDF_SD_ATTRINFO, thisSdsID, offset_index, data=offset

Fillvalue_index=HDF_SD_ATTRFIND(thisSdsID, '_FillValue')
HDF_SD_ATTRINFO, thisSdsID, Fillvalue_index, data=fillvalue

HDF_SD_END, newFileID

; Calcluate lat/lon.
;
; We assume that HDFE_CENTER is 0 by default. See GDdefpixreg() in 
; "HDF-EOS Library Users Guide for the ECS Project Volume 2: Function
; Reference Guide".
IF (pixregcode EQ 1) THEN PRINT, 'ERROR:Pixel is not centered.' 
IF (pixregcode EQ 1) THEN EXIT

; Pixel must be centered.
offsetX = 0.5
offsetY = 0.5

; We need to readjust the limits of latitude and longitude. 
; This file is using DDD.xxxxxx format to represent degrees.
;
; The following is the detailed description on how to calculate the
; latitude  and longitude range based on lowright and upleft.

; Then, calculate the difference of DDD between lowright and upleft.
lowright_d = floor(lowright)
upleft_d = floor(upleft)
dd = lowright_d-upleft_d
lat_limit = dd(1)
lon_limit = dd(0)

; We need to calculate the grid space interval between two adjacent points.
scaleX = lon_limit/float(xdimsize)
scaleY = lat_limit/float(ydimsize)

lon_value= FINDGEN(xdimsize)
lat_value= FINDGEN(ydimsize)
for i=0,xdimsize-1 do lon_value(i) = (i+offsetX)*(scaleX) + upleft_d(0);
for j=0,ydimsize-1 do lat_value(j) = (j+offsetX)*(scaleY) + upleft_d(1);

lon = float(lon_value)
lat = float(lat_value)

; Convert data type.
dataf=float(data)

; Process fill value.
dataf[WHERE(data EQ fillvalue(0))] = !Values.F_NAN

; Apply scale factor and offset.
dataf=(scale(0))*(dataf-offset(0))

m = MAP('Geographic', TITLE=file_name, FONT_SIZE=9, /BUFFER)
ct = COLORTABLE(72, /reverse)
t1 = TEXT(0.05, 0.2, FONT_SIZE=8, long_name)
; Data is big and out of memory error may occur. Sample every 10th point. 
c1 = CONTOUR(dataf[0:*:10, 0:*:10], lon[0:*:10], lat[0:*:10], $
             /FILL, OVERPLOT=m, RGB_TABLE=ct, $
             GRID_UNITS='degrees', POSITION=[0.1, 0.1, 0.83, 0.9])
mc = MAPCONTINENTS()
cb = COLORBAR(TARGET=c1, /BORDER, ORIENTATION=1, TEXTPOS=1, $
              POSITION=[0.85,0.2,0.87,0.8], TITLE=units)
png = file_name + '.idl.png'
c1.save, png, HEIGHT=600, WIDTH=800
EXIT
