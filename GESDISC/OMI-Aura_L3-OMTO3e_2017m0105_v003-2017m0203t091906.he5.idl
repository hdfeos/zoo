;
; This example code illustrates how to access and visualize GESDISC
; OMI Grid HDF-EOS5 file in IDL. 
;
; If you have any questions, suggestions, comments  on this example, 
; please use the HDF-EOS Forum (http://hdfeos.org/forums).
;
; If you would like to see an  example of any other NASA HDF/HDF-EOS 
; data product that is not listed in the HDF-EOS Comprehensive Examples page
; (http://hdfeos.org/zoo), feel free to contact us at eoshelp@hdfgroup.org
; or post it at the HDF-EOS Forum (http://hdfeos.org/forums).
;
; Usage:
;
;  %idl OMI-Aura_L3-OMTO3e_2017m0105_v003-2017m0203t091906.he5.idl
;
; Tested under: IDL 8.2.3
; Last updated: 2017-05-03

; Open file.
file_name = 'OMI-Aura_L3-OMTO3e_2017m0105_v003-2017m0203t091906.he5'
file_id = H5F_OPEN(file_name)

datafield_name = '/HDFEOS/GRIDS/OMI Column Amount O3/Data Fields/ColumnAmountO3'
data_id = H5D_OPEN(file_id,datafield_name)

dataspace_id = H5D_GET_SPACE(data_id)
Dims = H5S_GET_SIMPLE_EXTENT_DIMS(dataspace_id)
Dims = float(Dims)

; Get dimension sizes for lat/lon calculation.
lon_dims = Dims(0)
lat_dims = Dims(1)

data = H5D_READ(data_id)

; Get units attribute.
units_id = H5A_OPEN_NAME(data_id, 'Units')
units = H5A_READ(units_id)

; Get missing value attribute.
missingvalue_id = H5A_OPEN_NAME(data_id,'MissingValue')
missingvalue = H5A_READ(missingvalue_id)

; Convert data type.
dataf = float(data)
missingvaluef = float(missingvalue(0))

H5A_Close, missingvalue_id
H5D_Close, data_id

; Process missing value, convert dataf that are equal to missingvaluef to NaN
idx = where(dataf eq missingvaluef(0), cnt)
if cnt gt 0 then dataf[idx] = !Values.F_NAN


; Get max and min value of data for color bar.
datamin = MIN(dataf, /NAN)
datamax = MAX(dataf, /NAN)

; Calculate the latitude and longitude range based Grid dimension
; sizes.
lat = (FINDGEN(720)*(180.0/lat_dims))-90
lon = FINDGEN(1440)*(360.0/lon_dims)-180

; Prepare field name title using long name attribute.
field = 'ColumnAmountO3'
units = 'DU'

m = MAP('Geographic', TITLE=file_name)
ct = COLORTABLE(72, /reverse)

t1 = TEXT(0.35, 0.01, field)
c1 = CONTOUR(dataf, lon, lat, /FILL, OVERPLOT=m, $
             RGB_TABLE=ct, $
             GRID_UNITS='degrees', POSITION=[0.1, 0.1, 0.83, 0.9])
mc = MAPCONTINENTS()
cb = COLORBAR(TARGET=c1, /BORDER, ORIENTATION=1, TEXTPOS=1, POSITION=[0.85,0.2,0.87,0.8], TITLE=units)
png = file_name + '.idl.png'
c1.save, png, HEIGHT=600, WIDTH=800
EXIT
